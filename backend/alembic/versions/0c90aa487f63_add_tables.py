"""add tables

Revision ID: 0c90aa487f63
Revises: 
Create Date: 2025-10-20 13:29:27.492170

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0c90aa487f63'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('capacities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tonnage', sa.DECIMAL(precision=2, scale=1), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_capacities_id'), 'capacities', ['id'], unique=False)
    op.create_table('checklist_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('maintenance_type', sa.Enum('Monthly', 'Quarterly', 'SixMonthly', 'Yearly', 'Unscheduled', name='maint_type_enum', native_enum=False), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('divisions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('maintenance_dates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('last_maintenance', sa.Date(), nullable=True),
    sa.Column('next_maintenance', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_maintenance_dates_id'), 'maintenance_dates', ['id'], unique=False)
    op.create_table('makes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_makes_id'), 'makes', ['id'], unique=False)
    op.create_table('refrigerants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_refrigerants_id'), 'refrigerants', ['id'], unique=False)
    op.create_table('subdivisions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('division_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['division_id'], ['divisions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('designation', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('Admin', 'Supervisor', 'Maintainer', name='userrole_enum', native_enum=False), nullable=True),
    sa.Column('division_id', sa.Integer(), nullable=True),
    sa.Column('subdivision_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['division_id'], ['divisions.id'], ),
    sa.ForeignKeyConstraint(['subdivision_id'], ['subdivisions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('maintainers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('contact', sa.String(length=100), nullable=True),
    sa.Column('subdivision_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['subdivision_id'], ['subdivisions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_maintainers_id'), 'maintainers', ['id'], unique=False)
    op.create_table('air_conditioners',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('serial_number', sa.String(length=255), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=False),
    sa.Column('make_id', sa.Integer(), nullable=True),
    sa.Column('capacity_id', sa.Integer(), nullable=True),
    sa.Column('refrigerant_id', sa.Integer(), nullable=True),
    sa.Column('maintenance_dates_id', sa.Integer(), nullable=True),
    sa.Column('maintainer_id', sa.Integer(), nullable=True),
    sa.Column('subdivision_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['capacity_id'], ['capacities.id'], ),
    sa.ForeignKeyConstraint(['maintainer_id'], ['maintainers.id'], ),
    sa.ForeignKeyConstraint(['maintenance_dates_id'], ['maintenance_dates.id'], ),
    sa.ForeignKeyConstraint(['make_id'], ['makes.id'], ),
    sa.ForeignKeyConstraint(['refrigerant_id'], ['refrigerants.id'], ),
    sa.ForeignKeyConstraint(['subdivision_id'], ['subdivisions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('serial_number')
    )
    op.create_index(op.f('ix_air_conditioners_id'), 'air_conditioners', ['id'], unique=False)
    op.create_table('maintenance_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ac_id', sa.Integer(), nullable=True),
    sa.Column('maintainer_id', sa.Integer(), nullable=True),
    sa.Column('maintenance_type', sa.Enum('Monthly', 'Quarterly', 'SixMonthly', 'Yearly', 'Unscheduled', name='maintenancetype'), nullable=True),
    sa.Column('maintenance_date', sa.Date(), nullable=True),
    sa.Column('next_due_date', sa.Date(), nullable=True),
    sa.Column('work_done', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('Scheduled', 'Completed', 'Overdue', 'Breakdown', name='maint_status_enum', native_enum=False), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['ac_id'], ['air_conditioners.id'], ),
    sa.ForeignKeyConstraint(['maintainer_id'], ['maintainers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('maintenance_checklist_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('maintenance_id', sa.Integer(), nullable=True),
    sa.Column('checklist_item_id', sa.Integer(), nullable=True),
    sa.Column('done', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['checklist_item_id'], ['checklist_items.id'], ),
    sa.ForeignKeyConstraint(['maintenance_id'], ['maintenance_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parts_replaced',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('maintenance_id', sa.Integer(), nullable=True),
    sa.Column('part_name', sa.String(length=255), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['maintenance_id'], ['maintenance_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('parts_replaced')
    op.drop_table('maintenance_checklist_records')
    op.drop_table('maintenance_records')
    op.drop_index(op.f('ix_air_conditioners_id'), table_name='air_conditioners')
    op.drop_table('air_conditioners')
    op.drop_index(op.f('ix_maintainers_id'), table_name='maintainers')
    op.drop_table('maintainers')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('subdivisions')
    op.drop_index(op.f('ix_refrigerants_id'), table_name='refrigerants')
    op.drop_table('refrigerants')
    op.drop_index(op.f('ix_makes_id'), table_name='makes')
    op.drop_table('makes')
    op.drop_index(op.f('ix_maintenance_dates_id'), table_name='maintenance_dates')
    op.drop_table('maintenance_dates')
    op.drop_table('divisions')
    op.drop_table('checklist_items')
    op.drop_index(op.f('ix_capacities_id'), table_name='capacities')
    op.drop_table('capacities')
    # ### end Alembic commands ###
